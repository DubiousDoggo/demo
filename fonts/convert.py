# convert font bitmap into character binary

import imageio


def read_block(image, row, col):
    """ read 8x8 block from file """
    block = []
    for bit_row in range(8):
        byte = 0
        for bit_col in range(8):
            pixel = image[row * 8 + bit_row][col * 8 + bit_col]
            #print((0 if pixel[0] else 1),end="")
            byte = (byte << 1) | (0 if pixel[0] else 1)
        # print("=",byte)
        block.append(byte)
    return block


# mapping from 8x8 blocks in image to screencodes
mapping = [
    #   a     b     c     d     e     f     g     h     i     j     k     l     m     m     n     o     p     q     r     s     ſ     ß     t     u     v     w     w     x                 y     z     þ     ꝥ     &     ð
    [0xFF, 0x42, 0xFF, 0x44, 0xFF, 0xFF, 0xFF, 0x48, 0xFF, 0xFF, 0x4B, 0x4C, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x41, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x43, 0x45, 0x66, 0x5E],
    [0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x4D, 0x0E, 0x0F, 0x10, 0x11, 0x12, 0x13, 0x49, 0x4E, 0x14, 0x15, 0x16, 0x17, 0x57, 0x18, 0xFF, 0xFF, 0x19, 0x1A, 0x4F, 0x53, 0x26, 0x55],
    [0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x46, 0x47, 0xFF, 0xFF, 0x4A, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x50, 0x51, 0x52, 0xFF, 0x56, 0x5A, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x58, 0x5B, 0x5C, 0x59, 0xFF, 0x5D, 0x5D, 0x5F, 0xFF]
]

blocks = {}

with open("./font.bmp", "rb") as file:
    image = imageio.imread(file)
    for block_row in range(3):
        for block_col in range(len(mapping[block_row])):
            code = mapping[block_row][block_col]
            if code == 0xFF:
                continue
            blocks[code] = read_block(image, block_row, block_col)
with open("font.bin", "wb") as ofile:
    for code in range(256):
        if code in blocks:
            ofile.write(bytes(blocks[code]))
        else:
            ofile.write(bytes([0]*8))

with open("font_asc.bin","wb") as ofile:
    for i in range(256):
        try:
            idx = mapping[1].index(i)
            val = mapping[0][idx]
        except ValueError:
            val = 0xFF
        ofile.write(bytes([val]))

with open("font_des.bin","wb") as ofile:
    for i in range(256):
        try:
            idx = mapping[1].index(i)
            val = mapping[2][idx]
        except ValueError:
            val = 0xFF
        ofile.write(bytes([val]))

with open("fontmap.inc", "w") as ofile:
    print('; autogenerated via convert.py', file=ofile)
    print('font_asc: .incbin "font_asc.bin"', file=ofile)
    print('font_des: .incbin "font_des.bin"', file=ofile)
    print('font: .incbin "font.bin"', file=ofile)
